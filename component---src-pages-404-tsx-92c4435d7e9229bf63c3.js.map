{"version":3,"file":"component---src-pages-404-tsx-92c4435d7e9229bf63c3.js","mappings":"mLA4DA,MA1CgCA,IAKzB,IAL0B,MAC/BC,EAAK,YACLC,EAAW,SACXC,EAAQ,SACRC,GACD,EACC,MACEH,MAAOI,EACPH,YAAaI,EAAkB,MAC/BC,EAAK,QACLC,EAAO,cACPC,EAAa,gBACbC,ICZWC,EAAAA,EAAAA,IAAc,cAefC,KAAKC,aDAXC,EAAM,CACVb,MAAOA,GAASI,EAChBH,YAAaA,GAAeI,EAC5BC,MAAM,GAAIC,EAAUD,EACpBQ,IAAI,GAAIP,GAAUL,GAAQ,IAC1BM,gBACAC,mBAGF,OACEM,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQF,EAAIb,OACZe,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,cAAcC,QAASJ,EAAIZ,cACtCc,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,QAAQC,QAASJ,EAAIP,QAChCS,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,WAAWC,QAASJ,EAAIb,QACnCe,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,iBAAiBC,QAASJ,EAAIZ,cACzCc,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,UAAUC,QAAQ,YAC7BF,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,kBAAkBC,QAASJ,EAAIL,gBAC1CO,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,gBAAgBC,QAASJ,EAAIb,QACxCe,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,sBAAsBC,QAASJ,EAAIZ,cAC9Cc,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,gBAAgBC,QAASJ,EAAIP,QACvCH,EACA,C,gEExCP,UAVqB,IAEjBY,EAAAA,cAACG,EAAAA,EAAM,KACLH,EAAAA,cAACI,EAAAA,EAAG,CAACnB,MAAM,mBACXe,EAAAA,cAAAA,KAAAA,KAAAA,kBACAA,EAAAA,cAAAA,IAAAA,KAAAA,2D","sources":["webpack://shijbey.github.io/./src/components/Seo.tsx","webpack://shijbey.github.io/./src/hooks/use-site-metadata.tsx","webpack://shijbey.github.io/./src/pages/404.tsx"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\r\n\r\nexport interface SeoProps extends React.PropsWithChildren {\r\n  description?: string\r\n  lang?: string\r\n  meta?: { name: string; content: string }[]\r\n  title?: string\r\n  pathname?: string\r\n}\r\n\r\nconst Seo: React.FC<SeoProps> = ({\r\n  title,\r\n  description,\r\n  pathname,\r\n  children,\r\n}) => {\r\n  const {\r\n    title: defaultTitle,\r\n    description: defaultDescription,\r\n    image,\r\n    siteUrl,\r\n    twitterHandle,\r\n    instagramHandle,\r\n  } = useSiteMetadata()\r\n\r\n  const seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    image: `${siteUrl}${image}`,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n    twitterHandle,\r\n    instagramHandle,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title}</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n      <meta name=\"og:title\" content={seo.title} />\r\n      <meta name=\"og:description\" content={seo.description} />\r\n      <meta name=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={seo.twitterHandle} />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      <meta name=\"twitter:image\" content={seo.image} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport interface SiteMetadata {\r\n  title: string\r\n  description: string\r\n  twitterHandle: string\r\n  instagramHandle: string\r\n  siteUrl: string\r\n  image: string\r\n}\r\n\r\ninterface QueryOutput {\r\n  site: {\r\n    siteMetadata: SiteMetadata\r\n  }\r\n}\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery<QueryOutput>(graphql`\r\n    query SiteDataQuery {\r\n      site {\r\n        siteMetadata {\r\n          description\r\n          image\r\n          siteUrl\r\n          instagramHandle\r\n          title\r\n          twitterHandle\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport Seo from \"../components/Seo\"\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <Layout>\r\n      <Seo title=\"404: Not Found\" />\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["_ref","title","description","pathname","children","defaultTitle","defaultDescription","image","siteUrl","twitterHandle","instagramHandle","useStaticQuery","site","siteMetadata","seo","url","React","name","content","Layout","Seo"],"sourceRoot":""}