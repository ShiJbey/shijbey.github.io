{"version":3,"file":"component---src-templates-blog-post-jsx-e65c77d6092843434b91.js","mappings":"mLA4DA,MA1CgCA,IAKzB,IAL0B,MAC/BC,EAAK,YACLC,EAAW,SACXC,EAAQ,SACRC,GACD,EACC,MACEH,MAAOI,EACPH,YAAaI,EAAkB,MAC/BC,EAAK,QACLC,EAAO,cACPC,EAAa,gBACbC,ICZWC,EAAAA,EAAAA,IAAc,cAefC,KAAKC,aDAXC,EAAM,CACVb,MAAOA,GAASI,EAChBH,YAAaA,GAAeI,EAC5BC,MAAM,GAAIC,EAAUD,EACpBQ,IAAI,GAAIP,GAAUL,GAAQ,IAC1BM,gBACAC,mBAGF,OACEM,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQF,EAAIb,OACZe,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,cAAcC,QAASJ,EAAIZ,cACtCc,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,QAAQC,QAASJ,EAAIP,QAChCS,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,WAAWC,QAASJ,EAAIb,QACnCe,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,iBAAiBC,QAASJ,EAAIZ,cACzCc,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,UAAUC,QAAQ,YAC7BF,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,kBAAkBC,QAASJ,EAAIL,gBAC1CO,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,gBAAgBC,QAASJ,EAAIb,QACxCe,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,sBAAsBC,QAASJ,EAAIZ,cAC9Cc,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,gBAAgBC,QAASJ,EAAIP,QACvCH,EACA,C,mIEMP,MAnDY,KAAO,IAAD,IAChB,MAAMe,GAAOR,EAAAA,EAAAA,IAAe,cAiBtBS,EAA+B,QAAzB,EAAGD,EAAKP,KAAKC,oBAAY,aAAtBQ,EAAwBD,OACF,QAAzB,EAAGD,EAAKP,KAAKC,oBAAY,OAAtBS,EAAwBC,OAEvC,OACEP,EAAAA,cAAAA,MAAAA,CAAKQ,UAAU,OACbR,EAAAA,cAAAA,MAAAA,CACES,MAAO,CACLC,aAAc,MACdC,MAAO,OACPC,OAAQ,OACRC,SAAU,WAGZb,EAAAA,cAACc,EAAAA,EAAW,CACVN,UAAU,aACVO,OAAO,QACPC,IAAI,yBACJL,MAAO,GACPC,OAAQ,GACRK,QAAS,GACTC,IAAI,kBAAiB,wBAIxBd,aAAM,EAANA,EAAQH,OACPD,EAAAA,cAAAA,IAAAA,KAAAA,cACaA,EAAAA,cAAAA,SAAAA,KAASI,EAAOH,MAAc,KAAEG,aAAM,EAANA,EAAQe,UAAW,MAG9D,ECSV,MA5DyB,IAAyB,IAAD,MAAvB,KAAEhB,EAAI,SAAEiB,GAAU,EAC1C,MAAMC,EAAOlB,EAAKmB,eACZC,GAAkC,QAAtB,EAAApB,EAAKP,KAAKC,oBAAY,aAAtB,EAAwBZ,QAAK,QAE/C,OACE,gBAACuC,EAAA,EAAM,CAACJ,SAAUA,EAAUnC,MAAOsC,GACjC,gBAACE,EAAA,EAAG,CACFxC,MAAOoC,EAAKK,YAAYzC,MACxBC,YAAamC,EAAKK,YAAYxC,aAAemC,EAAKM,UAEpD,gBAACC,EAAA,EAAS,CAACpB,UAAU,QACnB,2BACEA,UAAU,YACVqB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYV,EAAKK,YAAYzC,OAC1C,yBAAIoC,EAAKK,YAAYM,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQb,EAAKc,MACxCJ,SAAS,gBAEX,2BACA,8BACA,gBAAC,EAAG,SA8BD,C","sources":["webpack://shijbey.github.io/./src/components/Seo.tsx","webpack://shijbey.github.io/./src/hooks/use-site-metadata.tsx","webpack://shijbey.github.io/./src/components/bio.tsx","webpack://shijbey.github.io/./src/templates/blog-post.jsx"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\r\n\r\nexport interface SeoProps extends React.PropsWithChildren {\r\n  description?: string\r\n  lang?: string\r\n  meta?: { name: string; content: string }[]\r\n  title?: string\r\n  pathname?: string\r\n}\r\n\r\nconst Seo: React.FC<SeoProps> = ({\r\n  title,\r\n  description,\r\n  pathname,\r\n  children,\r\n}) => {\r\n  const {\r\n    title: defaultTitle,\r\n    description: defaultDescription,\r\n    image,\r\n    siteUrl,\r\n    twitterHandle,\r\n    instagramHandle,\r\n  } = useSiteMetadata()\r\n\r\n  const seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    image: `${siteUrl}${image}`,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n    twitterHandle,\r\n    instagramHandle,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title}</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n      <meta name=\"og:title\" content={seo.title} />\r\n      <meta name=\"og:description\" content={seo.description} />\r\n      <meta name=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={seo.twitterHandle} />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      <meta name=\"twitter:image\" content={seo.image} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport interface SiteMetadata {\r\n  title: string\r\n  description: string\r\n  twitterHandle: string\r\n  instagramHandle: string\r\n  siteUrl: string\r\n  image: string\r\n}\r\n\r\ninterface QueryOutput {\r\n  site: {\r\n    siteMetadata: SiteMetadata\r\n  }\r\n}\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery<QueryOutput>(graphql`\r\n    query SiteDataQuery {\r\n      site {\r\n        siteMetadata {\r\n          description\r\n          image\r\n          siteUrl\r\n          instagramHandle\r\n          title\r\n          twitterHandle\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <div\r\n        style={{\r\n          borderRadius: \"50%\",\r\n          width: \"50px\",\r\n          height: \"50px\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <StaticImage\r\n          className=\"bio-avatar\"\r\n          layout=\"fixed\"\r\n          src=\"../images/headshot.jpg\"\r\n          width={50}\r\n          height={50}\r\n          quality={95}\r\n          alt=\"Profile picture\"\r\n        />\r\n      </div>\r\n\r\n      {author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport Layout from \"../components/Layout\"\r\nimport Seo from \"../components/Seo\"\r\nimport Bio from \"../components/bio\"\r\n\r\nconst BlogPostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <Container className=\"py-5\">\r\n        <article\r\n          className=\"blog-post\"\r\n          itemScope\r\n          itemType=\"http://schema.org/Article\"\r\n        >\r\n          <header>\r\n            <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n            <p>{post.frontmatter.date}</p>\r\n          </header>\r\n          <section\r\n            dangerouslySetInnerHTML={{ __html: post.html }}\r\n            itemProp=\"articleBody\"\r\n          />\r\n          <hr />\r\n          <footer>\r\n          <Bio />\r\n        </footer>\r\n        </article>\r\n        {/* <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav> */}\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["_ref","title","description","pathname","children","defaultTitle","defaultDescription","image","siteUrl","twitterHandle","instagramHandle","useStaticQuery","site","siteMetadata","seo","url","React","name","content","data","author","_data$site$siteMetada","_data$site$siteMetada2","social","className","style","borderRadius","width","height","overflow","StaticImage","layout","src","quality","alt","summary","location","post","markdownRemark","siteTitle","Layout","Seo","frontmatter","excerpt","Container","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}